{"version":3,"sources":["options/fields/index.js"],"names":["options","fields","map","field","task","wrap","fieldName","promise","args","then","result"],"mappings":";;;;;;kBA0Be,UAAUA,OAAV,EAAmB;AAChC,SAAOC,OAAOC,GAAP,CAAW;AAAA,QAAGC,KAAH,QAAGA,KAAH;AAAA,QAAUC,IAAV,QAAUA,IAAV;AAAA,WAAqBC,KAAKF,KAAL,EAAYC,IAAZ,EAAkBJ,OAAlB,CAArB;AAAA,GAAX,CAAP;AACD,C;;AA5BD;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,SAAS,CAAC;AACdE,SAAO,WADO;AAEdC;AAFc,CAAD,EAGZ;AACDD,SAAO,MADN;AAEDC;AAFC,CAHY,EAMZ;AACDD,SAAO,MADN;AAEDC;AAFC,CANY,CAAf;;AAWA;AACA;AACA,SAASC,IAAT,CAAcC,SAAd,EAAyBC,OAAzB,EAAkCC,IAAlC,EAAwC;AACtC,SAAOD,QAAQC,IAAR,EACJC,IADI,CACC;AAAA,WAAW;AACf,OAACH,SAAD,GAAaI;AADE,KAAX;AAAA,GADD,CAAP;AAID;;AAED;AACA","file":"index.js","sourcesContent":["import icon from './icon';\nimport userAgent from './userAgent';\nimport name from './name';\n\nconst fields = [{\n  field: 'userAgent',\n  task: userAgent,\n}, {\n  field: 'icon',\n  task: icon,\n}, {\n  field: 'name',\n  task: name,\n}];\n\n// Modifies the result of each promise from a scalar\n// value to a object containing its fieldname\nfunction wrap(fieldName, promise, args) {\n  return promise(args)\n    .then(result => ({\n      [fieldName]: result,\n    }));\n}\n\n// Returns a list of promises which will all resolve\n// with the following result: {[fieldName]: fieldvalue}\nexport default function (options) {\n  return fields.map(({ field, task }) => wrap(field, task, options));\n}\n"]}