{"version":3,"sources":["options/fields/name.js"],"names":["platform","name","targetUrl","tryToInferName","then","result","length","Promise","resolve","pageTitle","catch","error","warn"],"mappings":";;;;;;kBAmBe,iBAAyC;AAAA,MAA7BA,QAA6B,SAA7BA,QAA6B;AAAA,MAAnBC,IAAmB,SAAnBA,IAAmB;AAAA,MAAbC,SAAa,SAAbA,SAAa;;AACtD,SAAOC,eAAe,EAAEF,IAAF,EAAQC,SAAR,EAAf,EACJE,IADI,CACC;AAAA,WAAU,6BAAiBJ,QAAjB,EAA2BK,MAA3B,CAAV;AAAA,GADD,CAAP;AAED,C;;AAtBD;;;;AACA;;AACA;;AACA;;;;AAEA,SAASF,cAAT,OAA6C;AAAA,MAAnBF,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAC3C;AACA,MAAID,QAAQA,KAAKK,MAAL,GAAc,CAA1B,EAA6B;AAC3B,WAAOC,QAAQC,OAAR,CAAgBP,IAAhB,CAAP;AACD;;AAED,SAAO,uBAAWC,SAAX,EACJE,IADI,CACC;AAAA,WAAcK,wCAAd;AAAA,GADD,EAEJC,KAFI,CAEE,UAACC,KAAD,EAAW;AAChB,uBAAIC,IAAJ,CAAU,gEAAD,2BAAiF,cAAaD,KAAM,EAA7G;AACA;AACD,GALI,CAAP;AAMD","file":"name.js","sourcesContent":["import log from 'loglevel';\nimport { sanitizeFilename } from './../../utils';\nimport { inferTitle } from './../../infer';\nimport { DEFAULT_APP_NAME } from './../../constants';\n\nfunction tryToInferName({ name, targetUrl }) {\n  // .length also checks if its the commanderJS function or a string\n  if (name && name.length > 0) {\n    return Promise.resolve(name);\n  }\n\n  return inferTitle(targetUrl)\n    .then(pageTitle => (pageTitle || DEFAULT_APP_NAME))\n    .catch((error) => {\n      log.warn(`Unable to automatically determine app name, falling back to '${DEFAULT_APP_NAME}'. Reason: ${error}`);\n      return DEFAULT_APP_NAME;\n    });\n}\n\nexport default function ({ platform, name, targetUrl }) {\n  return tryToInferName({ name, targetUrl })\n    .then(result => sanitizeFilename(platform, result));\n}\n"]}