{"version":3,"sources":["options/asyncConfig.js"],"names":["options","tasks","Promise","all","then","inferredOptions","fieldResults","resultArrayToObject","reduce","accumulator","value","Object","assign","oldOptions","newOptions"],"mappings":";;;;;;kBAae,UAAUA,OAAV,EAAmB;AAChC,MAAMC,QAAQ,sBAAOD,OAAP,CAAd;AACA,SAAOE,QAAQC,GAAR,CAAYF,KAAZ,EACJG,IADI,CACC;AAAA,WAAgBC,gBAAgBL,OAAhB,EAAyBM,YAAzB,CAAhB;AAAA,GADD,CAAP;AAED,C;;AAjBD;;;;;;AAEA,SAASC,mBAAT,CAA6BD,YAA7B,EAA2C;AACzC,SAAOA,aAAaE,MAAb,CAAoB,UAACC,WAAD,EAAcC,KAAd;AAAA,WAAwBC,OAAOC,MAAP,CAAc,EAAd,EAAkBH,WAAlB,EAA+BC,KAA/B,CAAxB;AAAA,GAApB,EAAmF,EAAnF,CAAP;AACD;;AAED,SAASL,eAAT,CAAyBQ,UAAzB,EAAqCP,YAArC,EAAmD;AACjD,MAAMQ,aAAaP,oBAAoBD,YAApB,CAAnB;AACA,SAAOK,OAAOC,MAAP,CAAc,EAAd,EAAkBC,UAAlB,EAA8BC,UAA9B,CAAP;AACD;;AAED;AACA","file":"asyncConfig.js","sourcesContent":["import fields from './fields';\n\nfunction resultArrayToObject(fieldResults) {\n  return fieldResults.reduce((accumulator, value) => Object.assign({}, accumulator, value), {});\n}\n\nfunction inferredOptions(oldOptions, fieldResults) {\n  const newOptions = resultArrayToObject(fieldResults);\n  return Object.assign({}, oldOptions, newOptions);\n}\n\n// Takes the options object and infers new values\n// which may need async work\nexport default function (options) {\n  const tasks = fields(options);\n  return Promise.all(tasks)\n    .then(fieldResults => inferredOptions(options, fieldResults));\n}\n"]}