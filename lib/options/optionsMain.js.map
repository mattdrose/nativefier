{"version":3,"sources":["options/optionsMain.js"],"names":["inpOptions","options","dir","name","targetUrl","platform","inferPlatform","arch","inferArch","electronVersion","nativefierVersion","version","out","process","cwd","overwrite","asar","conceal","icon","counter","bounce","width","height","minWidth","minHeight","maxWidth","maxHeight","showMenuBar","fastQuit","userAgent","ignoreCertificate","ignoreGpuBlacklist","enableEs3Apis","insecure","flashPluginDir","flashPath","flash","diskCacheSize","inject","ignore","fullScreen","maximize","hideWindowFrame","verbose","disableContextMenu","disableDevTools","crashReporter","tmpdir","zoom","internalUrls","singleInstance","appVersion","buildVersion","appCopyright","versionString","win32metadata","ProductName","InternalName","FileDescription","processEnvs","fileDownloadOptions","tray","basicAuthUsername","basicAuthPassword","alwaysOnTop","setLevel","honest","toLowerCase","x","y"],"mappings":"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","file":"optionsMain.js","sourcesContent":["import log from 'loglevel';\n\nimport inferOs from './../infer/inferOs';\nimport normalizeUrl from './normalizeUrl';\nimport packageJson from './../../package.json';\nimport { ELECTRON_VERSION, PLACEHOLDER_APP_DIR } from './../constants';\nimport asyncConfig from './asyncConfig';\n\nconst { inferPlatform, inferArch } = inferOs;\n\n/**\n * Extracts only desired keys from inpOptions and augments it with defaults\n * @param {Object} inpOptions\n * @returns {Promise}\n */\nexport default function (inpOptions) {\n  const options = {\n    dir: PLACEHOLDER_APP_DIR,\n    name: inpOptions.name,\n    targetUrl: normalizeUrl(inpOptions.targetUrl),\n    platform: inpOptions.platform || inferPlatform(),\n    arch: inpOptions.arch || inferArch(),\n    electronVersion: inpOptions.electronVersion || ELECTRON_VERSION,\n    nativefierVersion: packageJson.version,\n    out: inpOptions.out || process.cwd(),\n    overwrite: inpOptions.overwrite,\n    asar: inpOptions.conceal || false,\n    icon: inpOptions.icon,\n    counter: inpOptions.counter || false,\n    bounce: inpOptions.bounce || false,\n    width: inpOptions.width || 1280,\n    height: inpOptions.height || 800,\n    minWidth: inpOptions.minWidth,\n    minHeight: inpOptions.minHeight,\n    maxWidth: inpOptions.maxWidth,\n    maxHeight: inpOptions.maxHeight,\n    showMenuBar: inpOptions.showMenuBar || false,\n    fastQuit: inpOptions.fastQuit || false,\n    userAgent: inpOptions.userAgent,\n    ignoreCertificate: inpOptions.ignoreCertificate || false,\n    ignoreGpuBlacklist: inpOptions.ignoreGpuBlacklist || false,\n    enableEs3Apis: inpOptions.enableEs3Apis || false,\n    insecure: inpOptions.insecure || false,\n    flashPluginDir: inpOptions.flashPath || inpOptions.flash || null,\n    diskCacheSize: inpOptions.diskCacheSize || null,\n    inject: inpOptions.inject || null,\n    ignore: 'src',\n    fullScreen: inpOptions.fullScreen || false,\n    maximize: inpOptions.maximize || false,\n    hideWindowFrame: inpOptions.hideWindowFrame,\n    verbose: inpOptions.verbose,\n    disableContextMenu: inpOptions.disableContextMenu,\n    disableDevTools: inpOptions.disableDevTools,\n    crashReporter: inpOptions.crashReporter,\n    // workaround for electron-packager#375\n    tmpdir: false,\n    zoom: inpOptions.zoom || 1.0,\n    internalUrls: inpOptions.internalUrls || null,\n    singleInstance: inpOptions.singleInstance || false,\n    appVersion: inpOptions.appVersion,\n    buildVersion: inpOptions.buildVersion,\n    appCopyright: inpOptions.appCopyright,\n    versionString: inpOptions.versionString,\n    win32metadata: inpOptions.win32metadata || {\n      ProductName: inpOptions.name,\n      InternalName: inpOptions.name,\n      FileDescription: inpOptions.name,\n    },\n    processEnvs: inpOptions.processEnvs,\n    fileDownloadOptions: inpOptions.fileDownloadOptions,\n    tray: inpOptions.tray || false,\n    basicAuthUsername: inpOptions.basicAuthUsername || null,\n    basicAuthPassword: inpOptions.basicAuthPassword || null,\n    alwaysOnTop: inpOptions.alwaysOnTop || false,\n  };\n\n  if (options.verbose) {\n    log.setLevel('trace');\n  } else {\n    log.setLevel('error');\n  }\n\n  if (options.flashPluginDir) {\n    options.insecure = true;\n  }\n\n  if (inpOptions.honest) {\n    options.userAgent = null;\n  }\n\n  if (options.platform.toLowerCase() === 'windows') {\n    options.platform = 'win32';\n  }\n\n  if (options.platform.toLowerCase() === 'osx' || options.platform.toLowerCase() === 'mac') {\n    options.platform = 'darwin';\n  }\n\n  if (options.width > options.maxWidth) {\n    options.width = options.maxWidth;\n  }\n\n  if (options.height > options.maxHeight) {\n    options.height = options.maxHeight;\n  }\n\n  if (typeof inpOptions.x !== 'undefined') {\n    options.x = inpOptions.x;\n  }\n\n  if (typeof inpOptions.y !== 'undefined') {\n    options.y = inpOptions.y;\n  }\n\n  return asyncConfig(options);\n}\n"]}