{"version":3,"sources":["build/buildApp.js"],"names":["copy","ncp","log","require","selectAppArgs","options","name","targetUrl","counter","bounce","width","height","minWidth","minHeight","maxWidth","maxHeight","x","y","showMenuBar","fastQuit","userAgent","nativefierVersion","ignoreCertificate","ignoreGpuBlacklist","enableEs3Apis","insecure","flashPluginDir","diskCacheSize","fullScreen","hideWindowFrame","maximize","disableContextMenu","disableDevTools","zoom","internalUrls","crashReporter","singleInstance","appCopyright","appVersion","buildVersion","win32metadata","versionString","processEnvs","fileDownloadOptions","tray","basicAuthUsername","basicAuthPassword","alwaysOnTop","maybeCopyScripts","srcs","dest","Promise","resolve","promises","map","reject","existsSync","src","Error","destFileName","extname","join","error","all","then","catch","normalizeAppName","appName","url","hash","createHash","update","postFixHash","digest","substring","normalized","kebabCase","toLowerCase","changeAppPackageJsonName","appPath","packageJsonPath","packageJson","JSON","parse","readFileSync","writeFileSync","stringify","buildApp","callback","appArgs","inject","err","warn"],"mappings":"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","file":"buildApp.js","sourcesContent":["import fs from 'fs';\nimport crypto from 'crypto';\nimport _ from 'lodash';\nimport path from 'path';\nimport ncp from 'ncp';\n\nconst copy = ncp.ncp;\nconst log = require('loglevel');\n/**\n * Only picks certain app args to pass to nativefier.json\n * @param options\n */\nfunction selectAppArgs(options) {\n  return {\n    name: options.name,\n    targetUrl: options.targetUrl,\n    counter: options.counter,\n    bounce: options.bounce,\n    width: options.width,\n    height: options.height,\n    minWidth: options.minWidth,\n    minHeight: options.minHeight,\n    maxWidth: options.maxWidth,\n    maxHeight: options.maxHeight,\n    x: options.x,\n    y: options.y,\n    showMenuBar: options.showMenuBar,\n    fastQuit: options.fastQuit,\n    userAgent: options.userAgent,\n    nativefierVersion: options.nativefierVersion,\n    ignoreCertificate: options.ignoreCertificate,\n    ignoreGpuBlacklist: options.ignoreGpuBlacklist,\n    enableEs3Apis: options.enableEs3Apis,\n    insecure: options.insecure,\n    flashPluginDir: options.flashPluginDir,\n    diskCacheSize: options.diskCacheSize,\n    fullScreen: options.fullScreen,\n    hideWindowFrame: options.hideWindowFrame,\n    maximize: options.maximize,\n    disableContextMenu: options.disableContextMenu,\n    disableDevTools: options.disableDevTools,\n    zoom: options.zoom,\n    internalUrls: options.internalUrls,\n    crashReporter: options.crashReporter,\n    singleInstance: options.singleInstance,\n    appCopyright: options.appCopyright,\n    appVersion: options.appVersion,\n    buildVersion: options.buildVersion,\n    win32metadata: options.win32metadata,\n    versionString: options.versionString,\n    processEnvs: options.processEnvs,\n    fileDownloadOptions: options.fileDownloadOptions,\n    tray: options.tray,\n    basicAuthUsername: options.basicAuthUsername,\n    basicAuthPassword: options.basicAuthPassword,\n    alwaysOnTop: options.alwaysOnTop,\n  };\n}\n\nfunction maybeCopyScripts(srcs, dest) {\n  if (!srcs) {\n    return new Promise((resolve) => {\n      resolve();\n    });\n  }\n  const promises = srcs.map(src => new Promise((resolve, reject) => {\n    if (!fs.existsSync(src)) {\n      reject(new Error('Error copying injection files: file not found'));\n      return;\n    }\n\n    let destFileName;\n    if (path.extname(src) === '.js') {\n      destFileName = 'inject.js';\n    } else if (path.extname(src) === '.css') {\n      destFileName = 'inject.css';\n    } else {\n      resolve();\n      return;\n    }\n\n    copy(src, path.join(dest, 'inject', destFileName), (error) => {\n      if (error) {\n        reject(new Error(`Error Copying injection files: ${error}`));\n        return;\n      }\n      resolve();\n    });\n  }));\n\n  return new Promise((resolve, reject) => {\n    Promise.all(promises)\n      .then(() => {\n        resolve();\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n}\n\nfunction normalizeAppName(appName, url) {\n  // use a simple 3 byte random string to prevent collision\n  const hash = crypto.createHash('md5');\n  hash.update(url);\n  const postFixHash = hash.digest('hex').substring(0, 6);\n  const normalized = _.kebabCase(appName.toLowerCase());\n  return `${normalized}-nativefier-${postFixHash}`;\n}\n\nfunction changeAppPackageJsonName(appPath, name, url) {\n  const packageJsonPath = path.join(appPath, '/package.json');\n  const packageJson = JSON.parse(fs.readFileSync(packageJsonPath));\n  packageJson.name = normalizeAppName(name, url);\n  fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson));\n}\n\n/**\n * Creates a temporary directory and copies the './app folder' inside,\n * and adds a text file with the configuration for the single page app.\n *\n * @param {string} src\n * @param {string} dest\n * @param {{}} options\n * @param callback\n */\nfunction buildApp(src, dest, options, callback) {\n  const appArgs = selectAppArgs(options);\n  copy(src, dest, (error) => {\n    if (error) {\n      callback(`Error Copying temporary directory: ${error}`);\n      return;\n    }\n\n    fs.writeFileSync(path.join(dest, '/nativefier.json'), JSON.stringify(appArgs));\n\n    maybeCopyScripts(options.inject, dest)\n      .catch((err) => {\n        log.warn(err);\n      })\n      .then(() => {\n        changeAppPackageJsonName(dest, appArgs.name, appArgs.targetUrl);\n        callback();\n      });\n  });\n}\n\n\nexport default buildApp;\n"]}